
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: ðŸ’Š USANA
* Environment: Production
* Id: f8fe0228-0413-0023-9e3f-133ff815f2e3
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";
import type { MedicalSpecialties } from "../taxonomies/index.ts";
import type { Person } from "./index.ts";

/**
 * Service
 *
 * Id: 018a2215-31b9-4366-9209-f292e03d79ec
 * Codename: service
 */
export type Service = CoreContentType<
  ServiceElementCodenames,
  {
    /**
     * Name
     *
     * Type: text
     * Required: true
     * Codename: name
     * Id: 90446bdc-f5dd-4442-b94e-0ca1238f3917
     */
    readonly name: Elements.TextElement;
    /**
     * Image
     *
     * Type: asset
     * Required: true
     * Codename: image
     * Id: 2e25cdc1-795e-4342-8c86-e3bafbedd21c
     */
    readonly image: Elements.AssetsElement;
    /**
     * Summary
     *
     * Type: text
     * Required: true
     * Codename: summary
     * Id: 2e46fa0f-e79c-47c8-8c79-748cf73bebe7
     */
    readonly summary: Elements.TextElement;
    /**
     * Description
     *
     * Type: rich_text
     * Required: true
     * Codename: description
     * Id: d0bbf2c9-3a64-4549-8795-00f4bfe5a19d
     */
    readonly description: Elements.RichTextElement<CoreContentType>;
    /**
     * Team
     *
     * Type: modular_content
     * Required: true
     * Codename: team
     * Id: 5ec9b177-55a4-4e7d-af1a-5629b54db2e8
     */
    readonly team: Elements.LinkedItemsElement<Person>;
    /**
     * Medical Specialties
     *
     * Type: taxonomy
     * Required: false
     * Codename: medical_specialties
     * Id: 7be1529e-bf12-457c-bb7e-b852bd81ec0f
     */
    readonly medical_specialties: Elements.TaxonomyElement<MedicalSpecialties, "medical_specialties">;
    /**
     * URL slug
     *
     * Type: url_slug
     * Required: true
     * Codename: url_slug
     * Id: 3c27fdbf-6286-4212-972c-8e5d6f08a857
     */
    readonly url_slug: Elements.UrlSlugElement;
  },
  "service"
>;

/**
 * Type representing all available element codenames for Service
 */
export type ServiceElementCodenames =
  | "name"
  | "image"
  | "summary"
  | "description"
  | "team"
  | "medical_specialties"
  | "url_slug";

/**
 * Type guard for Service
 *
 * Id: 018a2215-31b9-4366-9209-f292e03d79ec
 * Codename: service
 */
export function isService(item: CoreContentType | undefined | null): item is Service {
  return item?.system?.type === "service";
}
