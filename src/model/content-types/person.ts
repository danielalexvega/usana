
/** 
* This file has been auto-generated by '@kontent-ai/model-generator@8.0.0'.
* 
* (c) Kontent.ai
*  
* -------------------------------------------------------------------------------
* 
* Project: ðŸ’Š USANA
* Environment: Production
* Id: f8fe0228-0413-0023-9e3f-133ff815f2e3
* 
* -------------------------------------------------------------------------------
**/

import type { Elements } from "@kontent-ai/delivery-sdk";
import type { CoreContentType } from "../system/index.ts";

/**
 * Person
 *
 * Id: d43f8c15-16cd-5732-b2f7-2023997187fc
 * Codename: person
 */
export type Person = CoreContentType<
  PersonElementCodenames,
  {
    /**
     * First Name
     *
     * Type: text
     * Required: true
     * Codename: first_name
     * Id: 75123355-ea53-5577-9c1a-36d3747bc70d
     */
    readonly first_name: Elements.TextElement;
    /**
     * Last Name
     *
     * Type: text
     * Required: true
     * Codename: last_name
     * Id: 7cf10c8c-a512-5610-ae33-31031ab78cde
     */
    readonly last_name: Elements.TextElement;
    /**
     * Prefix
     *
     * Type: text
     * Required: false
     * Codename: prefix
     * Id: a4308aff-84ae-5d96-9f1f-5010be8a5278
     */
    readonly prefix: Elements.TextElement;
    /**
     * Suffixes
     *
     * Type: text
     * Required: false
     * Codename: suffixes
     * Id: 20132f59-693c-4383-91da-e0e4fd47f183
     */
    readonly suffixes: Elements.TextElement;
    /**
     * Biography
     *
     * Type: rich_text
     * Required: false
     * Codename: biography
     * Id: 091dac7c-3af2-5c43-9833-1b1da253cea8
     */
    readonly biography: Elements.RichTextElement<CoreContentType>;
    /**
     * Image
     *
     * Type: asset
     * Required: true
     * Codename: image
     * Id: 891ea65d-96ab-5530-a363-0cb6109554f2
     */
    readonly image: Elements.AssetsElement;
    /**
     * Job Title
     *
     * Type: text
     * Required: false
     * Codename: job_title
     * Id: e63e755f-29ce-5c45-9289-365bd7e47adf
     */
    readonly job_title: Elements.TextElement;
    /**
     * Phone
     *
     * Type: text
     * Required: false
     * Codename: phone
     * Id: 97beeda1-f092-5780-9279-4049ff22f3ad
     */
    readonly phone: Elements.TextElement;
    /**
     * Email
     *
     * Type: text
     * Required: false
     * Codename: email
     * Id: b1c7b88a-74e4-5b67-8f39-74a1c12ba316
     */
    readonly email: Elements.TextElement;
    /**
     * Website
     *
     * Type: text
     * Required: false
     * Codename: website
     * Id: b5899dc5-a299-4f6e-a169-d1e50ed2e8f2
     */
    readonly website: Elements.TextElement;
  },
  "person"
>;

/**
 * Type representing all available element codenames for Person
 */
export type PersonElementCodenames =
  | "first_name"
  | "last_name"
  | "prefix"
  | "suffixes"
  | "biography"
  | "image"
  | "job_title"
  | "phone"
  | "email"
  | "website";

/**
 * Type guard for Person
 *
 * Id: d43f8c15-16cd-5732-b2f7-2023997187fc
 * Codename: person
 */
export function isPerson(item: CoreContentType | undefined | null): item is Person {
  return item?.system?.type === "person";
}
